#!/usr/bin/env python3
import uuid
import shell
import os
import argh
import cli_gcp

def main(name,
         project=os.environ['GCP_PROJECT'],
         domain: 'gcp cloud dns domain to use for cname and ssl cert' = None,
         timeout=30,
         port: 'http port on backend services' = 8080,
         verbose=False,
         health_check_http_path="/health"):
    lb_name = name

    health_check_name = f'{lb_name}-health-checks'
    health_check = cli_gcp.ensure.health_check(verbose, project, health_check_name, health_check_http_path, port)

    backend_service_name = f'{lb_name}-backend-service'
    backend_service = cli_gcp.ensure.backend_service(verbose, project, timeout, cli_gcp.url(health_check), cli_gcp.port_name, backend_service_name)

    url_map_name = f'{lb_name}-url-map'
    url_map = cli_gcp.ensure.url_map(verbose, project, url_map_name, cli_gcp.url(backend_service))

    ip_address_name = f'{lb_name}-ip-address'
    ip_address = cli_gcp.ensure.global_ip_address(verbose, project, ip_address_name)

    ssl_cert_name = f'{lb_name}-ssl-cert'
    if domain: # google managed cert at cloud dns cname
        cli_gcp.ensure.dns_a_record(verbose, project, domain, ip_address['address'])
        ssl_cert = cli_gcp.ensure.ssl_cert_domain(verbose, project, ssl_cert_name, domain)
    else: # self signed cert at ipv4
        ssl_cert = cli_gcp.ensure.ssl_cert(verbose, project, ssl_cert_name, ip_address['address'])

    https_proxy_name = f'{lb_name}-https-proxy'
    https_proxy = cli_gcp.ensure.https_proxy(verbose, project, https_proxy_name, cli_gcp.url(url_map), cli_gcp.url(ssl_cert))

    https_forwarding_rules_name = f'{lb_name}-https-forwarding-rules'
    cli_gcp.ensure.global_forwarding_rules(verbose, project, https_forwarding_rules_name, cli_gcp.url(https_proxy), ip_address['address'], '443-443')

    http_proxy_name = f'{lb_name}-http-proxy'
    http_proxy = cli_gcp.ensure.http_proxy(verbose, project, http_proxy_name, cli_gcp.url(url_map))

    http_forwarding_rules_name = f'{lb_name}-http-forwarding-rules'
    cli_gcp.ensure.global_forwarding_rules(verbose, project, http_forwarding_rules_name, cli_gcp.url(http_proxy), ip_address['address'], '80-80')

    firewall_network_tag = f'{lb_name}-allow-health-checks'
    firewall_rule_name = f'{lb_name}-firewall-allow-health-checks'
    official_gcp_ips = ['35.191.0.0/16', '130.211.0.0/22']
    cli_gcp.ensure.firewall_allow(verbose, project, firewall_rule_name, official_gcp_ips, [firewall_network_tag], port)

if __name__ == '__main__':
    with cli_gcp.setup():
        with shell.set_stream():
            argh.dispatch_command(main)
